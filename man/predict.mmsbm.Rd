% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/predict.mmsbm.R
\name{predict.mmsbm}
\alias{predict.mmsbm}
\title{Predict edges based on estimated mmsbm model}
\usage{
\method{predict}{mmsbm}(fm, new.data.dyad = NULL,
  new.data.monad = NULL, parametric_mm = FALSE, forecast = FALSE,
  type = c("link", "response"))
}
\arguments{
\item{fm}{Object of class \code{mmsbm}.}

\item{new.data.dyad}{An optional \code{data.frame} object.}

\item{new.data.monad}{An optional \code{data.frame} object.}

\item{forecast}{Boolean. Defaults to FALSE.}

\item{type}{Character string. The default is to use the linear predictor of edges. The alternative
"response" returns predicted probabilities.}
}
\value{
If \code{new.data.dyad = NULL}, vector of length \code{nrow(fm$dyadic.data)}. Else, vector of length \code{nrow(new.data.dyad)}.
}
\description{
The function produces expected posterior edges based  
on estimated parameters and (optionally new) predictor data
}
\examples{
#########################
## Example: MID network
## during the Cold War
#########################

library(NetMix)

data(MID_monad_CW)
data(MID_dyad_CW)


## Estimate model (takes about 5 minutes)
system.time(fit_onset <- mmsbm(formula.dyad = mid_onset ~ hially + dist + 
                                 peaceyrs + spline1 + spline2 + spline3,
                               formula.monad =  ~ polity + logcinc,
                               data.dyad = MID_dyad_CW, data.monad = MID_monad_CW,
                               senderID = "country1", receiverID = "country2", 
                               nodeID = "country", 
                               timeID = "year",
                               n.groups = 3, 
                               n.hmmstates = 2,
                               directed = FALSE,
                               mmsbm.control = list(em_iter = 3000)))

## Summarize model
summary(fit_onset) 

## Plot blockmodel
plot(fit_onset)





}
\author{
Kosuke Imai (imai@harvard.edu), Tyler Pratt (tyler.pratt@yale.edu), Santiago Olivella (olivella@unc.edu)
}
